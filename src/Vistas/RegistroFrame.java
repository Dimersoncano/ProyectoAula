/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import javax.swing.JOptionPane;
import Logica.LogicaBilletera;
import Modelos.Usuario;
import Vistas.LoginFrame;
/**
 *
 * @author Dimerson
 */  


/**
 * Pantalla para registrar nuevos usuarios en la billetera virtual.
 * Incluye validaciones de entrada y navegación hacia LoginFrame.
 */
public class RegistroFrame extends javax.swing.JFrame {

    private LogicaBilletera logica; // Lógica compartida del sistema

    // Constructor que recibe la lógica de la billetera
    public RegistroFrame(LogicaBilletera logica) {
        this.logica = logica;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NombreLabel = new javax.swing.JLabel();
        NombreText = new javax.swing.JTextField();
        DocumentoLabel = new javax.swing.JLabel();
        DocumentoText = new javax.swing.JTextField();
        UsuarioLabel = new javax.swing.JLabel();
        UsuarioText = new javax.swing.JTextField();
        ContraseñaLabel = new javax.swing.JLabel();
        ContraseñaText = new javax.swing.JTextField();
        ConfirmarLabel = new javax.swing.JLabel();
        ConfimarText = new javax.swing.JTextField();
        RegistrarBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        NombreLabel.setText("Nombre Completo");

        NombreText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NombreTextKeyTyped(evt);
            }
        });

        DocumentoLabel.setText("Documento");

        DocumentoText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DocumentoTextKeyTyped(evt);
            }
        });

        UsuarioLabel.setText("Nombre De Usuario");

        UsuarioText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                UsuarioTextKeyTyped(evt);
            }
        });

        ContraseñaLabel.setText("Contraseña");

        ContraseñaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContraseñaTextActionPerformed(evt);
            }
        });

        ConfirmarLabel.setText("Confimar Contraseña");

        RegistrarBoton.setText("Registrar");
        RegistrarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(RegistrarBoton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UsuarioText, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ContraseñaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ConfirmarLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UsuarioLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DocumentoLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DocumentoText, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ContraseñaText, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                                .addComponent(ConfimarText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(244, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NombreText, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NombreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DocumentoLabel)
                    .addComponent(DocumentoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsuarioLabel)
                    .addComponent(UsuarioText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ContraseñaLabel)
                    .addComponent(ContraseñaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConfirmarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConfimarText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(RegistrarBoton)
                .addContainerGap(175, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ContraseñaTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContraseñaTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ContraseñaTextActionPerformed

    private void NombreTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NombreTextKeyTyped
                   char c = evt.getKeyChar();

// Permitir teclas de control como borrar, flechas, tabulador
             if (Character.isISOControl(c)) {
                     return;
}

// Solo permitir letras y espacios
         if (!Character.isLetter(c) && !Character.isWhitespace(c)) {
          evt.consume();
           getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Solo se permiten letras en el nombre.");
}   
    }//GEN-LAST:event_NombreTextKeyTyped

    private void DocumentoTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DocumentoTextKeyTyped
        char c = evt.getKeyChar();

// Permitir teclas de control como borrar, flechas, enter, etc.
if (Character.isISOControl(c)) {
    return;
}

// Solo permitir dígitos del 0 al 9
if (!Character.isDigit(c)) {
    evt.consume();
    getToolkit().beep();
    JOptionPane.showMessageDialog(this, "Solo se permiten números en el documento.");
}
    }//GEN-LAST:event_DocumentoTextKeyTyped

    private void UsuarioTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UsuarioTextKeyTyped
        char c = evt.getKeyChar();

// Permitir borrar, flechas, enter, etc.
if (Character.isISOControl(c)) {
    return;
}

// Permitir solo letras y números
if (!Character.isLetterOrDigit(c)) {
    evt.consume();
    getToolkit().beep();
    JOptionPane.showMessageDialog(this, "El usuario solo puede contener letras y números.");
}
    }//GEN-LAST:event_UsuarioTextKeyTyped

    private void RegistrarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarBotonActionPerformed
        
    String nombre = NombreText.getText().trim();
    String documento = DocumentoText.getText().trim();
    String usuario = UsuarioText.getText().trim();
    String clave = ContraseñaText.getText().trim();
    String confirmar = ConfimarText.getText().trim();

    // Validaciones básicas
    if (nombre.isEmpty() || documento.isEmpty() || usuario.isEmpty() || clave.isEmpty() || confirmar.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.");
        return;
    }

    if (clave.length() < 6) {
        JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 6 caracteres.");
        return;
    }

    if (!clave.matches(".*[a-zA-Z].*") || !clave.matches(".*\\d.*")) {
        JOptionPane.showMessageDialog(this, "La contraseña debe contener letras y números.");
        return;
    }

    if (!clave.equals(confirmar)) {
        JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden.");
        return;
    }

    // Crear el usuario
    Usuario nuevo = new Usuario(nombre, usuario, clave, "cliente");

    // Validar duplicado y registrar
    if (logica.registrarUsuario(nuevo)) {
        JOptionPane.showMessageDialog(this, "Usuario registrado con éxito.");
        new LoginFrame(logica).setVisible(true);
        this.dispose();
    } else {
        JOptionPane.showMessageDialog(this, "Ya existe un usuario con ese nombre de cuenta.");
    }

       
    }//GEN-LAST:event_RegistrarBotonActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ConfimarText;
    private javax.swing.JLabel ConfirmarLabel;
    private javax.swing.JLabel ContraseñaLabel;
    private javax.swing.JTextField ContraseñaText;
    private javax.swing.JLabel DocumentoLabel;
    private javax.swing.JTextField DocumentoText;
    private javax.swing.JLabel NombreLabel;
    private javax.swing.JTextField NombreText;
    private javax.swing.JButton RegistrarBoton;
    private javax.swing.JLabel UsuarioLabel;
    private javax.swing.JTextField UsuarioText;
    // End of variables declaration//GEN-END:variables
}
