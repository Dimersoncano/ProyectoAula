/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Logica.LogicaBilletera;
import Modelos.Usuario;
import javax.swing.JOptionPane;

/**
 *
 * @author Dimerson
 */
public class TransferenciaFrame extends javax.swing.JFrame {

   private Usuario remitente;
private LogicaBilletera logica;
private HomeFrame homeFrame;

public TransferenciaFrame(Usuario remitente, LogicaBilletera logica, HomeFrame homeFrame) {
    this.remitente = remitente;
    this.logica = logica;
    this.homeFrame = homeFrame;
    initComponents();
    setLocationRelativeTo(null); // Centrar ventana
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CuentaDestinoLabel = new javax.swing.JLabel();
        CuentaDestinoText = new javax.swing.JTextField();
        MontoLabel = new javax.swing.JLabel();
        MontoText = new javax.swing.JTextField();
        EnviarBoton = new javax.swing.JButton();
        VolverBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CuentaDestinoLabel.setText("Cuenta Destino");

        MontoLabel.setText("monto a enviar");

        EnviarBoton.setText("Enviar Dinero");
        EnviarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarBotonActionPerformed(evt);
            }
        });

        VolverBoton.setText("volver");
        VolverBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CuentaDestinoLabel)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(VolverBoton)
                                .addComponent(MontoLabel)))
                        .addGap(209, 209, 209)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CuentaDestinoText, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MontoText, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(EnviarBoton)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CuentaDestinoLabel)
                    .addComponent(CuentaDestinoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MontoLabel)
                    .addComponent(MontoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addComponent(EnviarBoton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(VolverBoton)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EnviarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarBotonActionPerformed
                                                   
    String cuentaDestino = CuentaDestinoText.getText().trim();
    String montoStr = MontoText.getText().trim();

    // Validación: campos vacíos
    if (cuentaDestino.isEmpty() || montoStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.");
        return;
    }

    // Validación: formato numérico del monto
    if (!montoStr.matches("\\d+(\\.\\d{1,2})?")) {
        JOptionPane.showMessageDialog(this, "Ingrese un monto válido (ej: 1000 o 1000.50).");
        return;
    }

    double monto = Double.parseDouble(montoStr);

    // Validación: monto positivo
    if (monto <= 0) {
        JOptionPane.showMessageDialog(this, "El monto debe ser mayor a 0.");
        return;
    }

    // Validación: no enviar a sí mismo
    if (cuentaDestino.equals(remitente.getNumeroCuenta())) {
        JOptionPane.showMessageDialog(this, "No puedes transferirte dinero a ti mismo.");
        return;
    }

    // Validación: saldo suficiente
    double saldoDisponible = remitente.getCuenta().getSaldo();
    if (monto > saldoDisponible) {
        JOptionPane.showMessageDialog(this, "No tienes suficiente saldo para realizar esta transferencia.");
        return;
    }

    // Buscar usuario destino en la lista
    Usuario receptor = null;
    for (Usuario u : logica.getUsuarios()) {
        if (u.getNumeroCuenta().equals(cuentaDestino)) {
            receptor = u;
            break;
        }
    }

    // Validación: usuario destino existe
    if (receptor == null) {
        JOptionPane.showMessageDialog(this, "La cuenta destino no existe.");
        return;
    }

    // Realizar la transferencia
    double nuevoSaldoRemitente = saldoDisponible - monto;
    remitente.getCuenta().setSaldo(nuevoSaldoRemitente);

    double saldoReceptor = receptor.getCuenta().getSaldo();
    receptor.getCuenta().setSaldo(saldoReceptor + monto);

    // Registrar en historial
    remitente.getHistorial().add(new Modelos.Transaccion("Envío", monto, "Envío a " + cuentaDestino));
    receptor.getHistorial().add(new Modelos.Transaccion("Recibo", monto, "Recibido de " + remitente.getNumeroCuenta()));

    JOptionPane.showMessageDialog(this, "Transferencia exitosa de $" + monto + " a " + cuentaDestino);

    // Actualizar saldo en pantalla de inicio
    homeFrame.actualizarSaldo();

    this.dispose(); // Cerrar la ventana

    }//GEN-LAST:event_EnviarBotonActionPerformed

    private void VolverBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverBotonActionPerformed
        this.dispose();            // Cierra Transferencia
homeFrame.setVisible(true); // Regresa al Home
    }//GEN-LAST:event_VolverBotonActionPerformed

  
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CuentaDestinoLabel;
    private javax.swing.JTextField CuentaDestinoText;
    private javax.swing.JButton EnviarBoton;
    private javax.swing.JLabel MontoLabel;
    private javax.swing.JTextField MontoText;
    private javax.swing.JButton VolverBoton;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
